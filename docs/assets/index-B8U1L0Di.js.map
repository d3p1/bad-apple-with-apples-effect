{"version":3,"file":"index-B8U1L0Di.js","sources":["../../src/media/videos/bad-apple.mp4","../../src/js/app.ts"],"sourcesContent":["export default \"__VITE_ASSET__DkpBLohz__\"","/**\n * @description App\n * @author      C. M. de Picciotto <d3p1@d3p1.dev> (https://d3p1.dev/)\n */\nimport badAppleVideo from '../media/videos/bad-apple.mp4'\n\nclass App {\n  /**\n   * @type {HTMLVideoElement}\n   */\n  #video: HTMLVideoElement\n\n  /**\n   * @type {HTMLCanvasElement}\n   */\n  #canvas: HTMLCanvasElement\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  #context: CanvasRenderingContext2D\n\n  /**\n   * @type {number}\n   */\n  #cellWidthSize: number\n\n  /**\n   * @type {number}\n   */\n  #cellHeightSize: number\n\n  /**\n   * Constructor\n   *\n   * @param {number} resolutionWidth\n   * @param {number} resolutionHeight\n   */\n  constructor(resolutionWidth: number, resolutionHeight: number) {\n    this.#initCanvas()\n    this.#initGrid(resolutionWidth, resolutionHeight)\n    this.#initVideo()\n  }\n\n  /**\n   * Run\n   *\n   * @returns {void}\n   */\n  #run(): void {\n    this.#clearCanvas()\n\n    this.#drawVideo()\n\n    this.#postProcessing()\n\n    requestAnimationFrame(this.#run.bind(this))\n  }\n\n  /**\n   * Post-processing\n   *\n   * @returns {void}\n   */\n  #postProcessing(): void {\n    const currentImgData = this.#context.getImageData(\n      0,\n      0,\n      this.#canvas.width,\n      this.#canvas.height,\n    )\n    const currentData = currentImgData.data\n\n    this.#clearCanvas()\n    for (let y = 0; y < this.#canvas.height; y += this.#cellHeightSize) {\n      for (let x = 0; x < this.#canvas.width; x += this.#cellWidthSize) {\n        const i = (y * this.#canvas.width + x) * 4\n        if (currentData[i] === 0) {\n          this.#drawApple(x, y)\n        }\n      }\n    }\n  }\n\n  /**\n   * Draw video\n   *\n   * @returns {void}\n   */\n  #drawVideo(): void {\n    this.#context.drawImage(\n      this.#video,\n      0,\n      0,\n      this.#canvas.width,\n      this.#canvas.height,\n    )\n  }\n\n  /**\n   * Draw apple\n   *\n   * @param   {number} x\n   * @param   {number} y\n   * @returns {void}\n   * @note    For now, it is used the cell width size\n   *          to determine apple dimensions, and we do not care if\n   *          overflow in the height dimension\n   */\n  #drawApple(x: number, y: number): void {\n    this.#context.font = `${this.#cellWidthSize}px`\n    this.#context.fillText('🍎', x, y)\n  }\n\n  /**\n   * Clear canvas\n   *\n   * @returns {void}\n   */\n  #clearCanvas(): void {\n    this.#context.fillStyle = '#fff'\n    this.#context.textAlign = 'center'\n    this.#context.textBaseline = 'middle'\n    this.#context.fillRect(0, 0, this.#canvas.width, this.#canvas.height)\n  }\n\n  /**\n   * Init video\n   *\n   * @returns {void}\n   */\n  #initVideo(): void {\n    this.#video = document.createElement('video')\n    this.#video.src = badAppleVideo\n    this.#video.muted = true\n\n    this.#video.addEventListener('loadeddata', () => {\n      this.#canvas.width = this.#video.videoWidth\n      this.#canvas.height = this.#video.videoHeight\n    })\n\n    this.#video.play().then(() => this.#run())\n  }\n\n  /**\n   * Init canvas\n   *\n   * @returns {void}\n   */\n  #initCanvas(): void {\n    this.#canvas = document.createElement('canvas')\n    this.#context = this.#canvas.getContext('2d', {\n      willReadFrequently: true,\n    }) as CanvasRenderingContext2D\n\n    this.#canvas.style.border = '2px solid #000'\n    document.body.appendChild(this.#canvas)\n  }\n\n  /**\n   * Init grid\n   *\n   * @param   {number} resolutionWidth\n   * @param   {number} resolutionHeight\n   * @returns {void}\n   */\n  #initGrid(resolutionWidth: number, resolutionHeight: number): void {\n    this.#cellWidthSize = Math.floor(this.#canvas.width / resolutionWidth)\n    this.#cellHeightSize = Math.floor(this.#canvas.height / resolutionHeight)\n  }\n}\nnew App(15, 15)\n"],"names":["badAppleVideo","App","resolutionWidth","resolutionHeight","__privateAdd","_App_instances","_video","_canvas","_context","_cellWidthSize","_cellHeightSize","__privateMethod","initCanvas_fn","initGrid_fn","initVideo_fn","run_fn","clearCanvas_fn","drawVideo_fn","postProcessing_fn","currentData","__privateGet","y","x","i","drawApple_fn","__privateSet"],"mappings":"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"}